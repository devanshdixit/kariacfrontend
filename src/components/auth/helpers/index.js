import { API } from "../../../backend";
import axios from 'axios';

export const register = user => {
  console.log(JSON.stringify(user));
  return   axios.post(`${API}register`,   {user})
    .then(response => {
      console.log(response);
      return response;
    })
    .catch(err  => {
      console.log(err);
    });
};

export const signin = user => {
  return axios.post(`${API}signin`, {user})
    .then(response => {
      return response;
    })
    .catch((err) =>{
      console.log(err);
    });
};

export const authenticate = (data, next) => {
  let token = sessionStorage.getItem('jwtToken');
      if(!token || token === '') {
        
       return next();
      }
  };
//   loadUserFromToken: () => {
//     let token = sessionStorage.getItem('jwtToken');
//     if(!token || token === '') {//if there is no token, dont bother
//       return;
//     }

//   //fetch user from token (if server deems it's valid token)
//    dispatch(meFromToken(token))
//      .then((response) => {
//        if (!response.error) {
//          //reset token (possibly new token that was regenerated by the server)
//          sessionStorage.setItem('jwtToken', response.payload.data.token);
//          dispatch(meFromTokenSuccess(response.payload))
//        } else {
//          sessionStorage.removeItem('jwtToken');//remove token from storage
//          dispatch(meFromTokenFailure(response.payload));
//        }
//      });
//   },
//   resetMe: () =>{
//     sessionStorage.removeItem('jwtToken'); //remove token from storage
//     dispatch(resetToken());
//   }
// }
export const isAutheticated = () => {
  let token = sessionStorage.getItem('jwtToken');
      if(!token || token === '') {
        //if there is no token, dont bother
        return false;
      }
    if (sessionStorage.getItem("jwtToken")) {
      return JSON.parse(sessionStorage.getItem("jwtToken"));
    } else {
      return false;
    }
  };

export const signout = next => {
    if (typeof window !== "undefined") {
      sessionStorage.removeItem('jwtToken');
      next();
  
      return axios(`${API}signout`)
        .then(response => console.log("signout success"))
        .catch(err => console.log(err));
    }
  };
 